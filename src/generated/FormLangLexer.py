# Generated from grammar/FormLang.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,10,82,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,
        2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,8,1,8,1,8,1,8,5,8,69,8,8,10,8,12,8,72,9,8,1,8,1,8,1,
        9,4,9,77,8,9,11,9,12,9,78,1,9,1,9,0,0,10,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,1,0,2,2,0,34,34,92,92,3,0,9,10,13,13,32,32,
        84,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
        11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,1,
        21,1,0,0,0,3,26,1,0,0,0,5,28,1,0,0,0,7,30,1,0,0,0,9,35,1,0,0,0,11,
        41,1,0,0,0,13,48,1,0,0,0,15,57,1,0,0,0,17,64,1,0,0,0,19,76,1,0,0,
        0,21,22,5,102,0,0,22,23,5,111,0,0,23,24,5,114,0,0,24,25,5,109,0,
        0,25,2,1,0,0,0,26,27,5,123,0,0,27,4,1,0,0,0,28,29,5,125,0,0,29,6,
        1,0,0,0,30,31,5,116,0,0,31,32,5,101,0,0,32,33,5,120,0,0,33,34,5,
        116,0,0,34,8,1,0,0,0,35,36,5,101,0,0,36,37,5,109,0,0,37,38,5,97,
        0,0,38,39,5,105,0,0,39,40,5,108,0,0,40,10,1,0,0,0,41,42,5,110,0,
        0,42,43,5,117,0,0,43,44,5,109,0,0,44,45,5,98,0,0,45,46,5,101,0,0,
        46,47,5,114,0,0,47,12,1,0,0,0,48,49,5,99,0,0,49,50,5,104,0,0,50,
        51,5,101,0,0,51,52,5,99,0,0,52,53,5,107,0,0,53,54,5,98,0,0,54,55,
        5,111,0,0,55,56,5,120,0,0,56,14,1,0,0,0,57,58,5,115,0,0,58,59,5,
        117,0,0,59,60,5,98,0,0,60,61,5,109,0,0,61,62,5,105,0,0,62,63,5,116,
        0,0,63,16,1,0,0,0,64,70,5,34,0,0,65,69,8,0,0,0,66,67,5,92,0,0,67,
        69,9,0,0,0,68,65,1,0,0,0,68,66,1,0,0,0,69,72,1,0,0,0,70,68,1,0,0,
        0,70,71,1,0,0,0,71,73,1,0,0,0,72,70,1,0,0,0,73,74,5,34,0,0,74,18,
        1,0,0,0,75,77,7,1,0,0,76,75,1,0,0,0,77,78,1,0,0,0,78,76,1,0,0,0,
        78,79,1,0,0,0,79,80,1,0,0,0,80,81,6,9,0,0,81,20,1,0,0,0,4,0,68,70,
        78,1,6,0,0
    ]

class FormLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    STRING = 9
    WS = 10

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'form'", "'{'", "'}'", "'text'", "'email'", "'number'", "'checkbox'", 
            "'submit'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "STRING", "WS" ]

    grammarFileName = "FormLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


